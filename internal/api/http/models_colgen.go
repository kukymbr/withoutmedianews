// Code generated by colgen v0.1.2; DO NOT EDIT.
package apihttp

import (
	"github.com/kukymbr/withoutmedianews/internal/domain"
	"github.com/kukymbr/withoutmedianews/internal/pkg/maps"
)

type Categories []Category

func (ll Categories) IDs() []int {
	r := make([]int, len(ll))
	for i := range ll {
		r[i] = ll[i].ID
	}
	return r
}

func (ll Categories) Index() map[int]Category {
	r := make(map[int]Category, len(ll))
	for i := range ll {
		r[ll[i].ID] = ll[i]
	}
	return r
}

func NewCategories(in []domain.Category) Categories { return maps.MapP(in, NewCategory) }

type NewsList []News

func (ll NewsList) IDs() []int {
	r := make([]int, len(ll))
	for i := range ll {
		r[i] = ll[i].ID
	}
	return r
}

func (ll NewsList) Index() map[int]News {
	r := make(map[int]News, len(ll))
	for i := range ll {
		r[ll[i].ID] = ll[i]
	}
	return r
}

func NewNewsList(in []domain.News) NewsList { return maps.MapP(in, NewNews) }

type Tags []Tag

func (ll Tags) IDs() []int {
	r := make([]int, len(ll))
	for i := range ll {
		r[i] = ll[i].ID
	}
	return r
}

func (ll Tags) Index() map[int]Tag {
	r := make(map[int]Tag, len(ll))
	for i := range ll {
		r[ll[i].ID] = ll[i]
	}
	return r
}

func NewTags(in []domain.Tag) Tags { return maps.MapP(in, NewTag) }
